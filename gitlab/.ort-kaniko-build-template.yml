---
variables:
  IMAGE_REGISTRY_URI:
    value: ""
    description: |
      URI for the Image registry to push images to

  IMAGE_REGISTRY_USER:
    value: ""
    description: |
      User for the Image registry to push images to

  IMAGE_REGISTRY_PASS:
    value: ""
    description: |
      Password for the Image registry to push images to

  REGISTRY_MIRROR:
    value: ""
    description: |
      Registry mirror for the Image registry

  ORT_BASE_IMAGE:
    value: $IMAGE_REGISTRY_URI/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME-base:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    description: |
      Target for ORT Base Image build.

  ORT_CI_IMAGE:
    value: $IMAGE_REGISTRY_URI/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    description: |
      Target for ORT CI Image. The CI Image is an addon to the base image containing extra tools for CI.

  ORT_REPO:
    value: https://github.com/oss-review-toolkit/ort.git
    description: |
      Url to the main ort repository to build form.

  ORT_CI_ACTION_REPO:
    value: https://github.com/janderssonse/ort-ci-action.git
    description: |
      Url to the main ort-ci-action repository.

  ORT_COMMIT_SHA:
    value: "bf42cee7ecfc0a73ceb21fb66cf1055f1fc9732a"
    description: |
      Default is to use the latest ORT revision
      Set this to a COMMIT_SHA, to pin/test another revision.

stages:
  - clone-ort
  - build-base-image
  - promote-base-image
  - clone-ort-ci-action
  - build-ci-image
  - promote-ci-image

clone-ort:
  stage: clone-ort
  image: alpine
  variables:
    GIT_STRATEGY: none
  tags:
    - k8s
  script:
    - apk update && apk upgrade && apk add --no-cache bash git openssh
    - mkdir ort
    - cd ort
    - git init
    - git remote add origin $ORT_REPO
    - git fetch --depth 1 origin $ORT_COMMIT_SHA
    - git checkout FETCH_HEAD
  rules:
    - if: "$CI_COMMIT_BRANCH"
      when: manual
  artifacts:
    paths:
      - ort/

build-base-image:
  stage: build-base-image
  needs: ["clone-ort"]
  image:
    name: gcr.io/kaniko-project/executor:v1.8.0-debug
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
  tags:
    - k8s
  script:
    - echo "{\"auths\":{\"$IMAGE_REGISTRY_URI\":{\"username\":\"$IMAGE_REGISTRY_USER\",\"password\":\"$IMAGE_REGISTRY_PASS\"}}}" > /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --snapshotMode=redo
      --use-new-run
      --context $CI_PROJECT_DIR/ort
      --destination $ORT_BASE_IMAGE
      --registry-mirror=${REGISTRY_MIRROR}

promote-base-image:
  stage: promote-base-image
  needs: ["build-base-image"]
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
  tags:
    - k8s
  script:
    - echo "$IMAGE_REGISTRY_PASS" | crane auth login -u "$IMAGE_REGISTRY_USER" --password-stdin "$IMAGE_REGISTRY_URI"
    - crane tag $ORT_BASE_IMAGE latest

clone-ort-ci-action:
  stage: clone-ort-ci-action
  needs: ["promote-base-image"]
  image: alpine
  variables:
    GIT_STRATEGY: none
  tags:
    - k8s
  script:
    - apk update && apk upgrade && apk add --no-cache bash git openssh
    - mkdir ort-ci-action
    - cd ort-ci-action
    - git init
    - git remote add origin $ORT_CI_ACTION_REPO
    - git fetch --depth 1 origin
    - git checkout FETCH_HEAD
  artifacts:
    paths:
      - ort-ci-action/

build-ci-image:
  stage: build-ci-image
  needs: ["clone-ort-ci-action"]
  image:
    name: gcr.io/kaniko-project/executor:v1.8.0-debug
    entrypoint: [""]
  tags:
    - k8s
  script:
    - echo "{\"auths\":{\"$IMAGE_REGISTRY_URI\":{\"username\":\"$IMAGE_REGISTRY_USER\",\"password\":\"$IMAGE_REGISTRY_PASS\"}}}" > /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --snapshotMode=redo
      --use-new-run
      --build-arg "ORT_DOCKER_IMAGE=$IMAGE_REGISTRY_URI/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME-base:latest"
      --context $CI_PROJECT_DIR
      --dockerfile "ort-ci-action/docker/Dockerfile.ci"
      --destination $ORT_CI_IMAGE
      --registry-mirror=${REGISTRY_MIRROR}

promote-ci-image:
  stage: promote-ci-image
  needs: ["build-ci-image"]
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
  tags:
    - k8s
  script:
    - echo "$IMAGE_REGISTRY_PASS" | crane auth login -u "$IMAGE_REGISTRY_USER" --password-stdin "$IMAGE_REGISTRY_URI"
    - crane tag $ORT_CI_IMAGE latest
